# aws_eip.app-eip[
  0
]:
resource "aws_eip" "app-eip" {
    association_id       = "eipassoc-05916eb4d74b132c5"
    domain               = "vpc"
    id                   = "eipalloc-0526f89defefa3c29"
    instance             = "i-025a539d4db4e3adf"
    network_border_group = "us-east-1"
    network_interface    = "eni-0d66911efbc781416"
    private_dns          = "ip-10-0-45-8.ec2.internal"
    private_ip           = "10.0.45.8"
    public_dns           = "ec2-xxx-xxx-xx.compute-1.amazonaws.com"
    public_ip            = "xx.xx.xx.xx"
    public_ipv4_pool     = "amazon"
    tags                 = {}
    vpc                  = true
}

# aws_instance.server[
  0
]:
resource "aws_instance" "server" {
    ami                          = "ami-0ddbdea833a8d2f0d"
    arn                          = "arn:aws:ec2:us-east-1:128943661192:instance/i-025a539d4db4e3adf"
    associate_public_ip_address  = true
    availability_zone            = "us-east-1b"
    cpu_core_count               = 1
    cpu_threads_per_core         = 1
    disable_api_termination      = false
    ebs_optimized                = false
    get_password_data            = false
    hibernation                  = false
    id                           = "i-025a539d4db4e3adf"
    instance_state               = "running"
    instance_type                = "t2.micro"
    ipv6_address_count           = 0
    ipv6_addresses               = []
    key_name                     = "KEY-NAME"
    monitoring                   = false
    primary_network_interface_id = "eni-0d66911efbc781416"
    private_dns                  = "ip-10-0-45-8.ec2.internal"
    private_ip                   = "10.0.45.8"
    public_dns                   = "ec2-xxx-xxx-xx.compute-1.amazonaws.com"
    public_ip                    = "xx.xx.xx.xx"
    secondary_private_ips        = []
    security_groups              = []
    source_dest_check            = true
    subnet_id                    = "subnet-09b746b39990965dc"
    tags                         = {
    "Description" = "Simple ec2 instance"
        "Name"        = "tf-demo"
  }
    tenancy                      = "default"
    vpc_security_group_ids       = [
    "sg-02eda79b8aa548b97",
  ]

    credit_specification {
        cpu_credits = "standard"
  }

    enclave_options {
        enabled = false
  }

    metadata_options {
        http_endpoint               = "enabled"
        http_put_response_hop_limit = 1
        http_tokens                 = "optional"
  }

    network_interface {
        delete_on_termination = false
        device_index          = 0
        network_interface_id  = "eni-0d66911efbc781416"
  }

    root_block_device {
        delete_on_termination = true
        device_name           = "/dev/sda1"
        encrypted             = false
        iops                  = 100
        tags                  = {}
        throughput            = 0
        volume_id             = "vol-0f0cec9bc2360cb9b"
        volume_size           = 8
        volume_type           = "gp2"
  }
}

# aws_internet_gateway.app-gw:
resource "aws_internet_gateway" "app-gw" {
    arn      = "arn:aws:ec2:us-east-1:128943661192:internet-gateway/igw-03591385f64929fd2"
    id       = "igw-03591385f64929fd2"
    owner_id = "128943661192"
    tags     = {
    "Name" = "tf-demo"
  }
    vpc_id   = "vpc-009caf7aa5e4a9a8d"
}

# aws_network_interface.tf-demo:
resource "aws_network_interface" "tf-demo" {
    id                 = "eni-0d66911efbc781416"
    ipv6_address_count = 0
    ipv6_addresses     = []
    mac_address        = "02:a4:29:3c:5d:ad"
    private_dns_name   = "ip-10-0-45-8.ec2.internal"
    private_ip         = "10.0.45.8"
    private_ips        = [
    "10.0.45.8",
  ]
    private_ips_count  = 0
    security_groups    = [
    "sg-02eda79b8aa548b97",
  ]
    source_dest_check  = true
    subnet_id          = "subnet-09b746b39990965dc"
    tags               = {
    "Name" = "primary_network_interface"
  }
}

# aws_route_table.app-route-table:
resource "aws_route_table" "app-route-table" {
    arn              = "arn:aws:ec2:us-east-1:128943661192:route-table/rtb-09332609eb424c1b3"
    id               = "rtb-09332609eb424c1b3"
    owner_id         = "128943661192"
    propagating_vgws = []
    route            = [
    {
            carrier_gateway_id         = ""
            cidr_block                 = "0.0.0.0/0"
            destination_prefix_list_id = ""
            egress_only_gateway_id     = ""
            gateway_id                 = "igw-03591385f64929fd2"
            instance_id                = ""
            ipv6_cidr_block            = ""
            local_gateway_id           = ""
            nat_gateway_id             = ""
            network_interface_id       = ""
            transit_gateway_id         = ""
            vpc_endpoint_id            = ""
            vpc_peering_connection_id  = ""
    },
  ]
    tags             = {
    "Name" = "tf-demo"
  }
    vpc_id           = "vpc-009caf7aa5e4a9a8d"
}

# aws_route_table_association.subnet-association:
resource "aws_route_table_association" "subnet-association" {
    id             = "rtbassoc-0fa729c63a1b222b8"
    route_table_id = "rtb-09332609eb424c1b3"
    subnet_id      = "subnet-09b746b39990965dc"
}

# aws_security_group.app_sg:
resource "aws_security_group" "app_sg" {
    arn                    = "arn:aws:ec2:us-east-1:128943661192:security-group/sg-02eda79b8aa548b97"
    description            = "Allow HTTP/SSH from Anywhere into EC2"
    egress                 = [
    {
            cidr_blocks      = [
        "0.0.0.0/0",
      ]
            description      = ""
            from_port        = 0
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "-1"
            security_groups  = []
            self             = false
            to_port          = 0
    },
  ]
    id                     = "sg-02eda79b8aa548b97"
    ingress                = [
    {
            cidr_blocks      = [
        "0.0.0.0/0",
      ]
            description      = ""
            from_port        = 22
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 22
    },
    {
            cidr_blocks      = [
        "0.0.0.0/0",
      ]
            description      = ""
            from_port        = 443
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 443
    },
    {
            cidr_blocks      = [
        "0.0.0.0/0",
      ]
            description      = ""
            from_port        = 80
            ipv6_cidr_blocks = []
            prefix_list_ids  = []
            protocol         = "tcp"
            security_groups  = []
            self             = false
            to_port          = 80
    },
  ]
    name                   = "tf-demo-sg-for-web-rules"
    owner_id               = "128943661192"
    revoke_rules_on_delete = false
    tags                   = {
    "Name" = "tf-demo"
  }
    vpc_id                 = "vpc-009caf7aa5e4a9a8d"
}

# aws_subnet.app-subnet:
resource "aws_subnet" "app-subnet" {
    arn                             = "arn:aws:ec2:us-east-1:128943661192:subnet/subnet-09b746b39990965dc"
    assign_ipv6_address_on_creation = false
    availability_zone               = "us-east-1b"
    availability_zone_id            = "use1-az1"
    cidr_block                      = "10.0.32.0/19"
    id                              = "subnet-09b746b39990965dc"
    map_customer_owned_ip_on_launch = false
    map_public_ip_on_launch         = false
    owner_id                        = "128943661192"
    tags                            = {
    "Name" = "tf-demo"
  }
    tags_all                        = {
    "Name" = "tf-demo"
  }
    vpc_id                          = "vpc-009caf7aa5e4a9a8d"
}

# aws_vpc.app-vpc:
resource "aws_vpc" "app-vpc" {
    arn                              = "arn:aws:ec2:us-east-1:128943661192:vpc/vpc-009caf7aa5e4a9a8d"
    assign_generated_ipv6_cidr_block = false
    cidr_block                       = "10.0.0.0/16"
    default_network_acl_id           = "acl-02408af1bc4d52720"
    default_route_table_id           = "rtb-0277ed611e0b08d4d"
    default_security_group_id        = "sg-0ff5c38ec350ea05b"
    dhcp_options_id                  = "dopt-a30fafd9"
    enable_classiclink               = false
    enable_classiclink_dns_support   = false
    enable_dns_hostnames             = true
    enable_dns_support               = true
    id                               = "vpc-009caf7aa5e4a9a8d"
    instance_tenancy                 = "default"
    main_route_table_id              = "rtb-0277ed611e0b08d4d"
    owner_id                         = "128943661192"
    tags                             = {
    "Name" = "tf-demo"
  }
    tags_all                         = {
    "Name" = "tf-demo"
  }
}

# data.aws_ami.ubuntu:
data "aws_ami" "ubuntu" {
    architecture          = "x86_64"
    arn                   = "arn:aws:ec2:us-east-1::image/ami-0ddbdea833a8d2f0d"
    block_device_mappings = [
    {
            device_name  = "/dev/sda1"
            ebs          = {
        "delete_on_termination" = "true"
                "encrypted"             = "false"
                "iops"                  = "0"
                "snapshot_id"           = "snap-05778d04774cc976a"
                "throughput"            = "0"
                "volume_size"           = "8"
                "volume_type"           = "gp2"
      }
            no_device    = ""
            virtual_name = ""
    },
    {
            device_name  = "/dev/sdb"
            ebs          = {}
            no_device    = ""
            virtual_name = "ephemeral0"
    },
    {
            device_name  = "/dev/sdc"
            ebs          = {}
            no_device    = ""
            virtual_name = "ephemeral1"
    },
  ]
    creation_date         = "2021-04-16T05:35:03.000Z"
    description           = "Canonical, Ubuntu, 20.04 LTS, amd64 focal image build on 2021-04-15"
    ena_support           = true
    hypervisor            = "xen"
    id                    = "ami-0ddbdea833a8d2f0d"
    image_id              = "ami-0ddbdea833a8d2f0d"
    image_location        = "099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210415"
    image_type            = "machine"
    most_recent           = true
    name                  = "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210415"
    owner_id              = "099720109477"
    owners                = [
    "099720109477",
  ]
    platform_details      = "Linux/UNIX"
    product_codes         = []
    public                = true
    root_device_name      = "/dev/sda1"
    root_device_type      = "ebs"
    root_snapshot_id      = "snap-05778d04774cc976a"
    sriov_net_support     = "simple"
    state                 = "available"
    state_reason          = {
    "code"    = "UNSET"
        "message" = "UNSET"
  }
    tags                  = {}
    usage_operation       = "RunInstances"
    virtualization_type   = "hvm"

    filter {
        name   = "name"
        values = [
      "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
    ]
  }
    filter {
        name   = "virtualization-type"
        values = [
      "hvm",
    ]
  }
}
